name: "Go CI"
on:
  push:
    branches:
      - master
      - 'dev-*'
  pull_request:
    paths-ignore:
      - '**.yml'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
            version: v1.54
            skip-pkg-cache: true
            args: --out-format=colored-line-number --timeout=20m

      - name: Format
        run: make fmt check_changes

  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Check
        run: make go_mod check_changes

  test:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macOS-latest", "windows-latest"]
        go: ["1.21"]
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:13.3
        env:
          POSTGRES_USER: opengist
          POSTGRES_DB: opengist
          POSTGRES_PASSWORD: opengist
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}

      - name: Run tests
        env:
          OG_DB_URL: host=localhost user=opengist password=opengist dbname=opengist port=5432 sslmode=disable
        run: make test

